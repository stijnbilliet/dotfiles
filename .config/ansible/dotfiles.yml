---
- name: Deploy desktop environment
  hosts: local
  vars:
    the_user: "{{ ansible_user_id }}"
  tasks:
    # Inform which machine local user we're installing this for
    - name: Print username
      ansible.builtin.debug:
        msg: Setting up the desktop environment for {{ the_user }}

    # Ensure the core packages are installed
    - name: Installing core packages
      become: true
      package:
        name: "{{pkgs_core}}"
        state: present

    # Set up greetd systemd service
    - name: Configure greetd
      become: true
      systemd:
        name: greetd.service
        state: started      # ensure it's running
        enabled: yes        # start on boot
        daemon_reload: yes  #reload if config changes

    # Set up dotfiles alias (git)
    # i.e. git df status
    - name: Set up git dotfiles alias
      git_config:
        name: alias.df
        scope: global
        value: "!git --git-dir=$HOME/dotfiles.git/ --work-tree=$HOME"

    # Set showUntrackedFiles to no
    - name: Set up showUntrackedFiles to false (git)
      git_config:
        repo: $HOME/dotfiles.git/
        name: status.showUntrackedFiles
        scope: local
        value: "no"

    # Change to the fish shell by default
    - name: Change default shell to fish
      become: yes
      user:
        name: "{{ the_user }}"
        shell: /usr/bin/fish

    # Create symlink to prefered light mode wallpaper
    - name: Symlink current wallpaper
      file:
        src: "~/.local/share/wallpapers/light/light_mojave.jpg"
        path: "~/.wallpaper"
        state: link

    # Create symlink to prefered light mode colorscheme
    - name: Symlink current colors
      file:
        src: "~/.config/cfx/light"
        path: "~/.color.d"
        state: link

    # Install required packages
    - name: Installing desktop packages
      become: true
      package:
        name: "{{item}}"
        state: present
      loop: "{{pkgs_desktop}}"
      register: pkg_install_results

    - name: Installing (fav) app packages
      become: true
      package:
        name: "{{pkgs_applications}}"
        state: present

    - name: Installing (fav) app flatpaks
      community.general.flatpak:
        name: "{{pkgs_flatpaks}}"
        state: present

